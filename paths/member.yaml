/member:
  get:
    tags:
    - developers
    summary: List all members.
    description: |
      By passing in the appropriate options, you can search for
      available members in the system.
    operationId: searchMembers
    parameters:
    - name: searchString
      in: query
      description: Pass an optional search string for looking up members.
      required: false
      style: form
      explode: true
      schema:
        type: string
    - name: skip
      in: query
      description: Number of records to skip for pagination.
      required: false
      style: form
      explode: true
      schema:
        minimum: 0
        type: integer
        format: int32
    - name: limit
      in: query
      description: Maximum number of records to return.
      required: false
      style: form
      explode: true
      schema:
        maximum: 50
        minimum: 0
        type: integer
        format: int32
    responses:
      "200":
        description: Member list containing results matching search criteria.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '../components/schemas/MemberItemResponse.yaml'
      "400":
        description: Bad input parameter.
  post:
    tags:
    - developers
    summary: Adds a member.
    description: Adds a member to the system.
    operationId: addMember
    requestBody:
      description: Member to add.
      content:
        application/json:
          schema:
            $ref: '../components/schemas/MemberItemPost.yaml'
    responses:
      "201":
        description: Member created successfully.
      "400":
        description: invalid input, object invalid
      "409":
        description: A member with this info exists.
